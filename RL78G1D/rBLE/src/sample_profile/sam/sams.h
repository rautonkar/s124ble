/*******************************************************************************
 * DISCLAIMER
 * This software is supplied by Renesas Electronics Corporation and is only
 * intended for use with Renesas products. No other uses are authorized. This
 * software is owned by Renesas Electronics Corporation and is protected under
 * all applicable laws, including copyright laws.
 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
 * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 * AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
 * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
 * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
 * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
 * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 * Renesas reserves the right, without notice, to make changes to this software
 * and to discontinue the availability of this software. By using this software,
 * you agree to the additional terms and conditions found by accessing the
 * following link:
 * http://www.renesas.com/disclaimer
 * (C) 2012-2017 Renesas Electronics Corporation All rights reserved.
 ******************************************************************************/

/******************************************************************************
 * File Name  : sams.h
 *
 * Copyright(C) 2013-2017 Renesas Electronics Corporation
 *
 * This file is generated by Bluetooth Developer Studio plugin.
 *     BDS Version    : 1.1.3139.0
 *     Script Version : 2.0.1
 *
 ******************************************************************************/
#ifndef __SAMS_H__
#define __SAMS_H__

/*******************************************************************************
 * Include Files
 ******************************************************************************/
#include "arch.h"
#include "rble.h"
#include "sam/sam.h"


/*******************************************************************************
 * Enumeration Definitions
 ******************************************************************************/
#define ENVIRONMENTAL_SENSING_SERVER_DESC_ALL_DISABLE (0x0000)
#define ENVIRONMENTAL_SENSING_SERVER_DESC_NTF_ENABLE  (0x0001)
#define ENVIRONMENTAL_SENSING_SERVER_DESC_IND_ENABLE  (0x0002)

/*******************************************************************************
 * Type Definitions
 ******************************************************************************/
typedef enum {
    ENVIRONMENTAL_SENSING_SERVER_EVENT_ENABLE_COMP = 0,
    ENVIRONMENTAL_SENSING_SERVER_EVENT_DISABLE_COMP,
    ENVIRONMENTAL_SENSING_SERVER_EVENT_CCCD_WRITE,
    ENVIRONMENTAL_SENSING_SERVER_EVENT_NOTIFY_COMP,
    ENVIRONMENTAL_SENSING_SERVER_EVENT_INDICATE_COMP,
    ENVIRONMENTAL_SENSING_SERVER_EVENT_SET_VALUE_COMP,
} ENVIRONMENTAL_SENSING_SERVER_EVENT_TYPE;

typedef struct {
	uint16_t es_descriptor_value_changed_char_cccd;
	uint16_t es_apparent_wind_direction_char_cccd;
	uint16_t es_apparent_wind_speed_char_cccd;
	uint16_t es_dew_point_char_cccd;
	uint16_t es_elevation_char_cccd;
	uint16_t es_gust_factor_char_cccd;
	uint16_t es_heat_index_char_cccd;
	uint16_t es_humidity_char_cccd;
	uint16_t es_irradiance_char_cccd;
	uint16_t es_pollen_concentration_char_cccd;
	uint16_t es_rainfall_char_cccd;
	uint16_t es_pressure_char_cccd;
	uint16_t es_temperature_char_cccd;
	uint16_t es_true_wind_direction_char_cccd;
	uint16_t es_true_wind_speed_char_cccd;
	uint16_t es_uv_index_char_cccd;
	uint16_t es_wind_chill_char_cccd;
	uint16_t es_barometric_pressure_trend_char_cccd;
	uint16_t es_magnetic_declination_char_cccd;
	uint16_t es_magnetic_flux_density___2d_char_cccd;
	uint16_t es_magnetic_flux_density___3d_char_cccd;
	uint16_t bs_battery_level_char_cccd;
} ENVIRONMENTAL_SENSING_SERVER_PARAM;

typedef struct {
    ENVIRONMENTAL_SENSING_SERVER_EVENT_TYPE type;
    RBLE_STATUS status;
    uint16_t conhdl;
    union {
        struct {
            ENVIRONMENTAL_SENSING_SERVER_PARAM param;
        } disable_comp_evt;
        struct {
            uint16_t char_hdl;
        } set_value_comp_evt;
        struct {
            uint16_t char_hdl;
            uint16_t value;
        } cccd_write_evt;
        struct {
            uint16_t char_hdl;
        } ntf_comp_evt;
        struct {
            uint16_t char_hdl;
        } ind_comp_evt;
    } param;
} ENVIRONMENTAL_SENSING_SERVER_EVENT;

typedef void (*ENVIRONMENTAL_SENSING_SERVER_EVENT_HANDLER)(ENVIRONMENTAL_SENSING_SERVER_EVENT *event);

/*******************************************************************************
 * Function Declarations (API)
 ******************************************************************************/
RBLE_STATUS ENVIRONMENTAL_SENSING_Server_Enable(uint16_t conhdl, uint8_t con_type,
                                 ENVIRONMENTAL_SENSING_SERVER_PARAM *param, ENVIRONMENTAL_SENSING_SERVER_EVENT_HANDLER callback);
RBLE_STATUS ENVIRONMENTAL_SENSING_Server_Disable(uint16_t conhdl);
RBLE_STATUS ENVIRONMENTAL_SENSING_Server_Char_NtfInd(uint16_t conhdl, uint16_t char_hdl, uint8_t *char_val, uint16_t req_type);
RBLE_STATUS ENVIRONMENTAL_SENSING_Server_Set_Value(uint16_t char_hdl, uint8_t *char_val);
#endif /* __SAMS_H__ */
